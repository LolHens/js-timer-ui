[{"id":"b1b7dbb1.a51dc8","type":"template","z":"2f2bdbdc.046684","name":"webapp","field":"payload","fieldType":"msg","format":"html","syntax":"plain","template":"<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Timers</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n      integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js\"\n        integrity=\"sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf\"\n        crossorigin=\"anonymous\"></script>\n\n<!-- ES Module Shims: Import maps polyfill for modules browsers without import maps support (all except Chrome 89+) -->\n<script async src=\"https://ga.jspm.io/npm:es-module-shims@0.10.1/dist/es-module-shims.min.js\"></script>\n\n<!--\n  JSPM Generator Import Map\n  https://generator.jspm.io/\n-->\n<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"react\": \"https://ga.jspm.io/npm:react@17.0.2/dev.index.js\",\n      \"react-dom\": \"https://ga.jspm.io/npm:react-dom@17.0.2/dev.index.js\",\n      \"lodash.uniqueid\": \"https://ga.jspm.io/npm:lodash.uniqueid@4.0.1/index.js\",\n      \"htm\": \"https://unpkg.com/htm?module\",\n      \"date-fns\": \"https://ga.jspm.io/npm:date-fns@2.19.0/index.js\",\n      \"react-timeline-range-slider\": \"https://ga.jspm.io/npm:react-timeline-range-slider@1.4.1/dist/index.js\"\n    },\n    \"scopes\": {\n      \"https://ga.jspm.io/\": {\n        \"object-assign\": \"https://ga.jspm.io/npm:object-assign@4.1.1/index.js\",\n        \"scheduler\": \"https://ga.jspm.io/npm:scheduler@0.20.2/dev.index.js\",\n        \"scheduler/tracing\": \"https://ga.jspm.io/npm:scheduler@0.20.2/dev.tracing.js\"\n      }\n    }\n  }\n</script>\n\n<style>\n    .react_time_range__time_range_container {\n        padding: 30px 18px;\n        width: auto;\n        touch-action: none;\n    }\n\n    .react_time_range__handle_wrapper {\n        -webkit-tap-highlight-color: initial;\n    }\n\n    .react_time_range__tick_label {\n        font-size: 14px;\n        transform: translateX(-0.5em);\n    }\n\n    .slider-container {\n        width: max(100%, 68em);\n    }\n\n    .device-label {\n        user-select: none;\n        cursor: pointer;\n    }\n\n    .device-label .collapse-arrow {\n        margin-right: .5rem;\n        display: inline-block;\n        font-size: 88%;\n        transition-duration: 0.1s;\n        transition-property: transform;\n    }\n\n    .device-label:not(.collapsed) .collapse-arrow {\n        transform: rotate(90deg);\n    }\n\n    .timerange-button {\n        margin-right: .5rem;\n        cursor: pointer;\n    }\n\n    .scroll-handle-x {\n        margin-top: 20px;\n        height: 5px;\n        margin-bottom: 20px;\n        opacity: 0.8;\n        background-size: 10px;\n        background-image: repeating-linear-gradient(to right, #c8cacc, #c8cacc 1px, #ffffff00 1px, #ffffff00);\n    }\n</style>\n\n<div id=\"root\"></div>\n\n<script type=\"module\">\n    import React from 'react'\n    import ReactDOM from 'react-dom'\n    import uniqueId from 'lodash.uniqueid';\n    import htm from 'htm'\n\n    const html = htm.bind(React.createElement);\n\n    import {set} from 'date-fns'\n    import TimeRange from 'react-timeline-range-slider'\n\n    const now = new Date()\n    const getTodayAtSpecificHour = (hour = 12) =>\n        set(now, {hours: hour, minutes: 0, seconds: 0, milliseconds: 0})\n\n    const startTime = getTodayAtSpecificHour(-12)\n    const endTime = getTodayAtSpecificHour(12)\n\n    const toTimeRange = ([start, end]) => {\n        let startHours = Math.trunc(start / 60);\n        let endHours = Math.trunc(end / 60);\n        if (startHours >= 12) {\n            if (startHours <= endHours) endHours -= 24\n            startHours -= 24\n        }\n        if (endHours > 12) endHours = 12;\n        return [\n            set(now, {hours: startHours, minutes: start % 60, seconds: 0, milliseconds: 0}),\n            set(now, {hours: endHours, minutes: end % 60, seconds: 0, milliseconds: 0})\n        ];\n    }\n\n    const fromTimeRange = ([start, end]) => [\n        start.getHours() * 60 + start.getMinutes(),\n        end.getHours() * 60 + end.getMinutes()\n    ]\n\n    class TimeSlider extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                error: false,\n                updateError: false\n            }\n        }\n\n        errorHandler = ({error}) => this.setState({error})\n\n        onChangeCallback = selectedInterval => {\n            if (!this.state.updateError && typeof this.props.onChange !== 'undefined')\n                this.props.onChange(fromTimeRange(selectedInterval))\n            this.setState({selectedInterval})\n        }\n\n        componentDidUpdate(prevProps, prevState) {\n            if (JSON.stringify(this.props.disabledTimeRanges) !== JSON.stringify(prevProps.disabledTimeRanges)) {\n                this.setState(\n                    () => ({updateError: true}),\n                    () => this.setState(() => ({updateError: false}))\n                )\n            }\n        }\n\n        render() {\n            const {disabledTimeRanges, timeRange} = this.props\n            const {error, updateError} = this.state\n            return html`\n                <${TimeRange.default} ...${\n                        {\n                            error: error,\n                            ticksNumber: (24) * 2,\n                            selectedInterval: toTimeRange([timeRange[0], timeRange[1] + (updateError ? 1 : 0)]),\n                            timelineInterval: [startTime, endTime],\n                            onUpdateCallback: this.errorHandler,\n                            onChangeCallback: this.onChangeCallback,\n                            disabledIntervals: disabledTimeRanges\n                                    .map(e => toTimeRange(e))\n                                    .map(([start, end]) => ({start, end}))\n                        }\n                }/>\n            `\n        }\n    }\n\n    class App extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                id: uniqueId(),\n                schedules: {}\n            }\n        }\n\n        componentDidMount() {\n            this.receiveUpdate();\n            let self = this;\n            setInterval(() => this.receiveUpdate.call(self), 2000);\n        }\n\n        receiveUpdate() {\n            let self = this;\n            fetch(\"/water/api\")\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        self.setState({schedules: result});\n                    },\n                    (error) => {\n                        self.setState({schedules: {}});\n                    }\n                )\n        }\n\n        sendUpdate(schedules) {\n            let self = this;\n            fetch(\"/water/api\", {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                redirect: 'follow',\n                referrerPolicy: 'no-referrer',\n                body: JSON.stringify(schedules)\n            })\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        self.setState({schedules: result});\n                    },\n                    (error) => {\n                        self.setState({schedules: {}});\n                    }\n                )\n        }\n\n        render() {\n            const {schedules} = this.state\n            return Object.entries(schedules).map(([key, schedule]) => html`\n                <div key=\"${key}\" className=\"flex mb-4\">\n                    <div className=\"d-flex flex-row\">\n                        <h1 className=\"device-label d-flex flex-row collapsed ${schedule.active ? \"text-primary\" : \"\"}\"\n                            data-bs-toggle=\"collapse\" data-bs-target=\"#collapse-${key}\">\n                            <div><i class=\"bi bi-chevron-right collapse-arrow\"></i></div>\n                            ${schedule.title}\n                        </h1>\n                        <div className=\"flex-fill\"></div>\n                        <form>\n                            <div className=\"btn-group\" role=\"group\">\n                                <input type=\"radio\" className=\"btn-check\" name=\"mode-radio\" id=\"mode-radio-${key}-1\"\n                                       autoComplete=\"off\" checked=${schedule.override === null}\n                                       onChange=${() => this.setState(state => (state.schedules[key].override = null, this.sendUpdate(state.schedules), state))}/>\n                                <label className=\"btn btn-outline-primary\" htmlFor=\"mode-radio-${key}-1\">Auto</label>\n                                <input type=\"radio\" className=\"btn-check\" name=\"mode-radio\" id=\"mode-radio-${key}-2\"\n                                       autoComplete=\"off\" checked=${schedule.override === true}\n                                       onChange=${() => this.setState(state => (state.schedules[key].override = true, this.sendUpdate(state.schedules), state))}/>\n                                <label className=\"btn btn-outline-success\" htmlFor=\"mode-radio-${key}-2\">On</label>\n                                <input type=\"radio\" className=\"btn-check\" name=\"mode-radio\" id=\"mode-radio-${key}-3\"\n                                       autoComplete=\"off\" checked=${schedule.override === false}\n                                       onChange=${() => this.setState(state => (state.schedules[key].override = false, this.sendUpdate(state.schedules), state))}/>\n                                <label className=\"btn btn-outline-danger\" htmlFor=\"mode-radio-${key}-3\">Off</label>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"collapse mb-3\" id=\"collapse-${key}\">\n                        <div className=\"w-100 mb-3\" style=${{overflowX: \"auto\"}}>\n                            <div className=\"slider-container\">\n                                ${schedule.timeRanges.map((timeRange, i) => html`\n                                    <${TimeSlider} key=\"${i}\" ...${{\n                                        timeRange,\n                                        disabledTimeRanges: schedule.timeRanges.slice(0, i),\n                                        onChange: (timeRange) => {\n                                            this.setState(state => (state.schedules[key].timeRanges[i] = timeRange, state.test = (state.test || 0) + 1, this.sendUpdate(state.schedules), state));\n                                        }\n                                    }}/>\n                                    <div key=\"handle-${i}\" className=\"w-100 scroll-handle-x\"/>\n                                `)}\n                            </div>\n                        </div>\n                        <i className=\"bi bi-dash-circle text-danger timerange-button\" style=${{fontSize: \"30px\"}}\n                           onClick=${() => {\n                               this.setState(state => (state.schedules[key].timeRanges.pop(), this.sendUpdate(state.schedules), state));\n                           }}></i>\n                        <i className=\"bi bi-plus-circle text-success timerange-button\" style=${{fontSize: \"30px\"}}\n                           onClick=${() => {\n                               this.setState(state => (state.schedules[key].timeRanges.push([0, 0]), this.sendUpdate(state.schedules), state));\n                           }}></i>\n                    </div>\n                </div>\n            `)\n        }\n    }\n\n    ReactDOM.render(\n        html`\n            <div className=\"container my-5 d-flex flex-column\">\n                <${App}/>\n            </div>\n        `,\n        document.getElementById('root')\n    );\n</script>\n</body>\n</html>","output":"str","x":620,"y":60,"wires":[["a5ff6488.0deec8"]]},{"id":"57913b2a.9da914","type":"http in","z":"2f2bdbdc.046684","name":"","url":"/app/water","method":"get","upload":false,"swaggerDoc":"","x":160,"y":60,"wires":[["b1b7dbb1.a51dc8"]]},{"id":"a5ff6488.0deec8","type":"http response","z":"2f2bdbdc.046684","name":"","statusCode":"","headers":{},"x":750,"y":60,"wires":[]},{"id":"9a72438e.c0bd7","type":"function","z":"2f2bdbdc.046684","name":"get state","func":"let state = JSON.parse(JSON.stringify(flow.get(\"state\")));\n\nlet date = new Date()\nlet currentMinutes = date.getMinutes() + (60 * date.getHours());\n\nmsg.payload = {}\nObject.entries(state).forEach(e => {\n    let elem = e[1];\n    elem.active = elem.override;\n    if (elem.active === null) {\n        elem.active = elem.timeRanges.some(range =>\n            (currentMinutes >= range[0] && currentMinutes < range[1]) ||\n            (range[1] < range[0] && (currentMinutes >= range[0] || currentMinutes < range[1]))\n        )\n    }\n    msg.payload[e[0]] = elem;\n});\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":180,"wires":[["50daf0ad.4dac6"]]},{"id":"bf72535c.91928","type":"http in","z":"2f2bdbdc.046684","name":"","url":"/app/water/api","method":"get","upload":false,"swaggerDoc":"","x":170,"y":180,"wires":[["82bac783.142ee8"]]},{"id":"86375378.8e845","type":"http response","z":"2f2bdbdc.046684","name":"","statusCode":"","headers":{},"x":1130,"y":180,"wires":[]},{"id":"55089bbe.b83774","type":"function","z":"2f2bdbdc.046684","name":"set state","func":"let state = flow.get(\"state\");\n\nObject.entries(msg.payload).forEach(e => {\n    let source = e[1];\n    var target = state[e[0]];\n    \n    if ([true, false, null].includes(source.override))\n        target.override = source.override;\n        \n    if (Array.isArray(source.timeRanges) && source.timeRanges.every(range => Array.isArray(range) && range.length === 2))\n        target.timeRanges = source.timeRanges;\n});\n\nflow.set(\"state\", state);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":500,"y":120,"wires":[["82bac783.142ee8","aec004a6.debeb8"]]},{"id":"db4a9040.8f12f","type":"http in","z":"2f2bdbdc.046684","name":"","url":"/app/water/api","method":"post","upload":false,"swaggerDoc":"","x":170,"y":120,"wires":[["b64776fa.88b968"]]},{"id":"b64776fa.88b968","type":"json","z":"2f2bdbdc.046684","name":"","property":"payload","action":"obj","pretty":false,"x":370,"y":120,"wires":[["55089bbe.b83774"]]},{"id":"82bac783.142ee8","type":"change","z":"2f2bdbdc.046684","name":"0 mux","rules":[{"t":"set","p":"topic","pt":"msg","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":670,"y":180,"wires":[["9a72438e.c0bd7"]]},{"id":"50daf0ad.4dac6","type":"switch","z":"2f2bdbdc.046684","name":"demux","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"}],"checkall":"false","repair":false,"outputs":2,"x":970,"y":180,"wires":[["86375378.8e845"],["9cd49c06.f1874"]]},{"id":"aec004a6.debeb8","type":"change","z":"2f2bdbdc.046684","name":"1 mux","rules":[{"t":"set","p":"topic","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":670,"y":240,"wires":[["9a72438e.c0bd7"]]},{"id":"5c77143.e1966ec","type":"inject","z":"2f2bdbdc.046684","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":240,"wires":[["aec004a6.debeb8"]]},{"id":"9cd49c06.f1874","type":"split","z":"2f2bdbdc.046684","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":670,"y":320,"wires":[["70d20b60.def524"]]},{"id":"70d20b60.def524","type":"change","z":"2f2bdbdc.046684","name":"key","rules":[{"t":"set","p":"payload.key","pt":"msg","to":"parts.key","tot":"msg"},{"t":"set","p":"topic","pt":"msg","to":"parts.key","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":670,"y":360,"wires":[["dc0fa0a8.927e4"]]},{"id":"64f3fcdc.6d6674","type":"rbe","z":"2f2bdbdc.046684","name":"","func":"rbe","gap":"","start":"","inout":"out","property":"payload.active","x":670,"y":440,"wires":[["36eea83.9c1f258"]]},{"id":"dc0fa0a8.927e4","type":"switch","z":"2f2bdbdc.046684","name":"active?","property":"payload.active","propertyType":"msg","rules":[{"t":"true"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":680,"y":400,"wires":[["64f3fcdc.6d6674","93a8a03f.8705f"],["64f3fcdc.6d6674"]]},{"id":"93a8a03f.8705f","type":"function","z":"2f2bdbdc.046684","name":"->","func":"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":480,"wires":[["c75c34f3.5f6b18"]]},{"id":"36eea83.9c1f258","type":"filter","z":"2f2bdbdc.046684","name":"!active?","property":"payload.active","propertyType":"msg","asArray":false,"itemProperty":"","itemPropertyType":"item","rules":[{"t":"false","output":1}],"checkall":"true","outputs":1,"x":680,"y":480,"wires":[["93a8a03f.8705f"]]}]